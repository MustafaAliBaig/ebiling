name: ebilling-dev

services:
  db:
    image: postgres:16
    container_name: ebilling_db
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-15432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ebilling}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ebilling}
      POSTGRES_DB: ${POSTGRES_DB:-ebilling}
    volumes:
      - ebilling_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ebilling} -d ${POSTGRES_DB:-ebilling}"]
      interval: 10s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer:4
    container_name: ebilling_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      db:
        condition: service_healthy

  kafka:
    image: bitnami/kafka:3.7
    container_name: ebilling_kafka
    restart: unless-stopped
    ports:
      - "${KAFKA_HOST_PORT:-9094}:9094" # host access for tools on your machine
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:${KAFKA_HOST_PORT:-9094}
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: ebilling_redis
    restart: unless-stopped
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ebilling_mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT:-2525}:1025" # change host port to avoid 1025 conflicts
      - "${MAILHOG_HTTP_PORT:-8025}:8025"
    # Healthcheck is optional; service_started is fine for dev
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ebilling_app
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-ebilling}
      DB_USER: ${POSTGRES_USER:-ebilling}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-ebilling}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started

volumes:
  ebilling_pgdata:
